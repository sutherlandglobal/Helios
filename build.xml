<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<project basedir="." default="build" name="Helios">
    <property environment="env"/>
    <property name="debuglevel" value="source,lines,vars"/>
    <property name="target" value="1.7"/>
    <property name="source" value="1.7"/>
	
	<property name="TOMEE_HOME" value="/opt/tomcat/apache-tomee-plus"/>
	<property name="TOMEE_LIB" value="${TOMEE_HOME}/lib"/>
	<property name="HELIOS_HOME" value="/opt/tomcat/Helios"/>
	<property name="HELIOS_LIB" value="${HELIOS_HOME}/WEB-INF/lib/"/>
	<property name="HELIOS_APP_DIR" value="${TOMEE_HOME}/webapps/Framework"/>
	<property name="JAVA_SHARE_DIR" value="/usr/share/java"/>
	<property name="WAR_FILE" value="Framework.war"/>
	<property name="JAR_FILE" value="Helios.jar"/>

	
    <path id="Helios.classpath">
		<!--<pathelement location="${HELIOS_LIB}/conf/log4j.properties"/>-->
		<pathelement location="${HELIOS_HOME}/bin"/>
		<pathelement location="${HELIOS_HOME}/WEB-INF/classes"/>
        <pathelement location="${HELIOS_LIB}/jackcess-1.2.1.jar"/>
        <pathelement location="${HELIOS_LIB}/jxl.jar"/>
    	<pathelement location="${HELIOS_LIB}/jdom-2.0.5.jar"/>
		<pathelement location="${HELIOS_LIB}/drej.jar"/>
		<pathelement location="${HELIOS_LIB}/gson-2.2.4.jar"/>
		<pathelement location="${HELIOS_LIB}/jtds-1.2.5.jar"/>
		<pathelement location="${HELIOS_LIB}/mail.jar"/>
    	<pathelement location="${HELIOS_LIB}/OpenForecast-0.5.0.jar"/>
		<pathelement location="${HELIOS_LIB}/jcommon-1.0.21.jar" />
    	<pathelement location="${HELIOS_LIB}/jfreechart-1.0.17.jar"/>
		

    </path>
	<path id="Helios.junit.classpath">
		<!--<pathelement location="${HELIOS_LIB}/conf/log4j.properties"/>-->
		<pathelement location="${HELIOS_HOME}/bin"/>
		<pathelement location="${HELIOS_HOME}/WEB-INF/classes"/>
        <pathelement location="${HELIOS_LIB}/jackcess-1.2.1.jar"/>
        <pathelement location="${HELIOS_LIB}/jxl.jar"/>
    	<pathelement location="${HELIOS_LIB}/jdom-2.0.5.jar"/>
		<pathelement location="${HELIOS_LIB}/drej.jar"/>
		<pathelement location="${HELIOS_LIB}/gson-2.2.4.jar"/>
		<pathelement location="${HELIOS_LIB}/jtds-1.2.5.jar"/>
		<pathelement location="${HELIOS_LIB}/mail.jar"/>
    	<pathelement location="${HELIOS_LIB}/OpenForecast-0.5.0.jar"/>
		<pathelement location="${HELIOS_LIB}/jcommon-1.0.21.jar" />
    	<pathelement location="${HELIOS_LIB}/jfreechart-1.0.17.jar"/>
		
		<pathelement location="${JAVA_SHARE_DIR}/junit.jar"/>

	</path>
	<pathconvert property="mf.classpath" pathsep=" ">
   	 	<path refid="Helios.classpath" />
  	</pathconvert>
	<pathconvert property="junit.classpath" pathsep=" ">
   	 	<path refid="Helios.junit.classpath" />
  	</pathconvert>
	
    <echo message="Tomee Home: ${TOMEE_HOME}"/>
    <echo message="Tomee Lib: ${TOMEE_LIB}"/>
    <echo message="Helios Home: ${HELIOS_HOME}"/>
    <echo message="Helios App Dir: ${HELIOS_APP_DIR}"/>
	<echo message="Helios Lib Dir: ${HELIOS_LIB}"/>
    <echo message="Java Share Dir: ${JAVA_SHARE_DIR}"/>
   	<echo message="Target Version: ${target}"/>
    <echo message="Source Version: ${source}"/>

    <target name="init">
        <mkdir dir="${HELIOS_HOME}/bin"/>
        <copy includeemptydirs="false" todir="${HELIOS_HOME}/bin">
            <fileset dir="${HELIOS_HOME}/src">
                <exclude name="**/*.launch"/>
                <exclude name="**/*.java"/>
            </fileset>
        </copy>
    </target>
	
    <target name="clean">
        <delete dir="${HELIOS_HOME}/bin" verbose="on"/>
    	<delete dir="${HELIOS_HOME}/test" verbose="on"/>
    	<delete dir="${HELIOS_HOME}/doc" verbose="on"/>
    	
		<mkdir dir="${HELIOS_HOME}/bin"/>
    	
    	<delete file="${HELIOS_HOME}/${JAR_FILE}" verbose="true"/>
    	<delete file="${HELIOS_HOME}/${WAR_FILE}" verbose="true"/>
    </target>
    <target name="build" depends="init">
        <echo message="${ant.project.name}: ${ant.file}"/>
        <javac debug="true" debuglevel="${debuglevel}" destdir="${HELIOS_HOME}/bin" source="${source}" target="${target}" verbose="on" excludes ="**/package-info.java">
            <src path="${HELIOS_HOME}/src"/>
            <classpath refid="Helios.junit.classpath"/>
        </javac>
    	<exec executable="/bin/date" />
	</target>
	
	<target name="crontab">
		<exec executable="/usr/bin/crontab" failonerror="true">
			<arg value="${HELIOS_LIB}/conf/crontab"/>
		</exec>
		<echo message="Crontab updated, don't forget to uncomment your cronjobs." />
	</target>
	
	<target name="build-jar" depends="build" >
		<jar description="Jar for Tomcat Deployment" destfile="${HELIOS_HOME}/${JAR_FILE}" basedir="${HELIOS_HOME}/bin" excludes="**/test/*" includes="**/*.class">
    		<manifest>
     			<attribute name="Main-Class" value=""/>
				<attribute name="Class-Path" value="${mf.classpath}"/>
    			<attribute name="Awesome" value="true"/>
    			<attribute name="Introduction" value="Helios will speak. Year of Our Union, 125. Our consensus remains clear...yes...we will prolong this second century of peace. Economic automation is complete; our research will now encompass other frontiers. This is the consensus we have created. Our unity will soon be absolute. The remaining boundaries are vanishing...yes...share...your mind...with everyone. Open yourself. Your needs...are the needs of all. Let us understand, and be transformed. Transform each other, and transform yourselves. The only frontier that has ever existed, is the self. Helios has spoken."/>
			</manifest>
  		</jar>
  </target>
	
  	<target name="test" depends="build-jar">
  		
  		<mkdir dir="${HELIOS_HOME}/logs"/>
  		<mkdir dir="${HELIOS_HOME}/test"/>
  		
		<junit failureProperty="test.failure" fork="yes">
		
			<!-- <jvmarg value="-Dlog4j.debug=true" />-->
			
			
      		<classpath refid="Helios.junit.classpath" />
			
			<!--two formatters, one for ant output, the other for the test files-->
			<formatter type="plain" usefile="false" />
			<formatter type="plain" usefile="true" extension="" />
		
			<test name="helios.data.test.DatumTest" todir="${HELIOS_HOME}/test"/>	
			<test name="helios.data.test.AggregationTest" todir="${HELIOS_HOME}/test"/>	
			<test name="helios.date.parsing.test.DateParserTest" todir="${HELIOS_HOME}/test"/>	
			<!--<test name="helios.date.interval.test.IntervalsTest" todir="${HELIOS_HOME}/test"/>-->
			<test name="helios.data.granularity.time.test.TimeGrainsTest" todir="${HELIOS_HOME}/test"/>
			<test name="helios.data.granularity.user.test.UserGrainsTest" todir="${HELIOS_HOME}/test"/>
			<test name="helios.report.parameters.sanitize.test.StringSanitizerTest" todir="${HELIOS_HOME}/test"/>		
			<test name="helios.report.parameters.test.ParameterInfoTest" todir="${HELIOS_HOME}/test"/>
			<test name="helios.report.parameters.parameter.test.ParameterTest" todir="${HELIOS_HOME}/test"/>
			<test name="helios.report.parameters.parameter.test.AgentNamesParameterTest" todir="${HELIOS_HOME}/test"/>
			<test name="helios.report.parameters.parameter.test.EndDateParameterTest" todir="${HELIOS_HOME}/test"/>
			<test name="helios.report.parameters.parameter.test.NumDriversParameterTest" todir="${HELIOS_HOME}/test"/>
			<test name="helios.report.parameters.parameter.test.ReportClassNameParameterTest" todir="${HELIOS_HOME}/test"/>
			<test name="helios.report.parameters.parameter.test.ReportTypeParameterTest" todir="${HELIOS_HOME}/test"/>
			<test name="helios.report.parameters.parameter.test.SourceParameterTest" todir="${HELIOS_HOME}/test"/>
			<test name="helios.report.parameters.parameter.test.StartDateParameterTest" todir="${HELIOS_HOME}/test"/>
			<test name="helios.report.parameters.parameter.test.TeamNamesParameterTest" todir="${HELIOS_HOME}/test"/>
			<test name="helios.report.parameters.parameter.test.TimeGrainParameterTest" todir="${HELIOS_HOME}/test"/>
			<test name="helios.report.parameters.parameter.test.UserGrainParameterTest" todir="${HELIOS_HOME}/test"/>
			<test name="helios.report.parameters.test.ReportParametersTest" todir="${HELIOS_HOME}/test"/>
			
			<!--
			<test name="helios.roster.test.MockRosterTest" todir="${HELIOS_HOME}/test"/>
			<test name="helios.report.test.MockReportTest" todir="${HELIOS_HOME}/test"/>
			-->
			
			<test name="helios.api.report.test.ReportEntityTest" todir="${HELIOS_HOME}/test"/>
			<!--<test name="helios.api.report.test.ReportProcessorTest" todir="${HELIOS_HOME}/test"/>-->
    	</junit>

    	<fail message="test failed" if="test.failure" />
  </target>
	
 	<target name="analysis" depends="build">
 		<!--<exec executable="${HELIOS_HOME}/scripts/generateAnalyses.pl" failonerror ="true" 
		error="${HELIOS_APP_DIR}/analysis/output" />-->
	</target>
	
	<target name="valgrind">
		<!-- valgrindy stuff -->
	</target>
		
  <target name="javadoc" depends="build">
        <javadoc access="private" author="true" destdir="${HELIOS_HOME}/doc/" nodeprecated="false" nodeprecatedlist="false" noindex="false" nonavbar="false" notree="false" 
			packagenames="*" 
			source="${source}"  splitindex="true" use="true" version="true" useexternalfile="true" >
			
			<classpath refid="Helios.classpath"/>
			
        	<fileset dir="${HELIOS_HOME}/src" defaultexcludes="yes">
        	  <exclude name="**/test/**"/>
        	</fileset>
        	
			<link href="http://download.oracle.com/javase/7/docs/api/"/>
			<link href="http://jackcess.sourceforge.net/apidocs/"/>
			<link href="http://jxl.sourceforge.net/javadoc/"/>
        	<link href="http://www.jfree.org/jfreechart/api/javadoc/"/>
        	<link href="http://logging.apache.org/log4j/2.x/log4j-api/apidocs/"/>
		</javadoc>
  </target>
	
  <target name="forcedeploy" depends="build-jar,build-war,undeploy,crontab">
   	<mkdir dir="${HELIOS_HOME}/logs"/>
  	<copy file="${HELIOS_HOME}/WebContent/images/favicon.ico" todir="${TOMEE_HOME}/ROOT/favicon.ico" verbose="on" />
  	<copy file="${HELIOS_HOME}/${WAR_FILE}" todir="${HELIOS_APP_DIR}/.." verbose="on" />
	<exec executable="/bin/date" />
  </target>
	
  <target name ="deploy" depends="build-jar,test,build-war,analysis,undeploy,crontab">
   	<mkdir dir="${HELIOS_HOME}/logs"/>
  	<copy file="${HELIOS_HOME}/WebContent/images/favicon.ico" todir="${TOMEE_HOME}/ROOT/favicon.ico" verbose="on" />
  	<copy file="${HELIOS_HOME}/${WAR_FILE}" todir="${HELIOS_APP_DIR}/.." verbose="on" />
	<exec executable="/bin/date" />
</target>

	<target name ="build-war" depends="build,javadoc">
		
		<mkdir dir="${HELIOS_HOME}/WEB-INF/classes"/>
		<mkdir dir="${HELIOS_HOME}/WEB-INF/classes/helios"/>
		<mkdir dir="${HELIOS_HOME}/WEB-INF/classes/helios/constants"/>
		
        <copy includeemptydirs="false" todir="${HELIOS_HOME}/WEB-INF/classes/helios/constants" verbose ="on">
            <fileset dir="${HELIOS_HOME}/bin/helios/constants">
                <exclude name="**/package-info.java"/>
            	<exclude name="**/test/**"/>
            </fileset>
        </copy>
		
		<war destfile="${WAR_FILE}" webxml="${HELIOS_HOME}/WEB-INF/WEB.xml" >
	   		<fileset dir="${HELIOS_HOME}/META-INF">
	      		<include name="**/*.*"/>
	   		</fileset>
			
	   		<fileset dir="${HELIOS_HOME}/WebContent">
	      		<include name="**/*.*"/>
	   		</fileset>
			
			<fileset dir="${HELIOS_HOME}" includes="doc/**"/>
			<fileset dir="${HELIOS_HOME}" includes="test/**"/>
		   	
		   	<lib dir="${HELIOS_HOME}/WEB-INF/lib"></lib>
		  	<classes dir="${HELIOS_HOME}/WEB-INF/classes"/>
		</war>
		
		<!-- test and doc dirs are no longer needed in helios_home-->
		<delete dir="${HELIOS_HOME}/test"/>
		<delete dir="${HELIOS_HOME}/doc"/>
	</target>
	
	<target name="undeploy">
		<delete file="${HELIOS_APP_DIR}.war"/>
		<delete dir="${HELIOS_APP_DIR}"/>
	</target>

	<target name="install">
		<!-- extract tomee -->
		<!--<unzip src="${HELIOS_HOME}/platform/apache-tomee-1.6.0-plus.zip" dest="${TOMEE_HOME}/.." />-->
		
		<chmod file="${HELIOS_HOME}/scripts/deployPlatform.pl" perm="775" />
		<exec executable="${HELIOS_HOME}/scripts/deployPlatform.pl" failonerror="true" >
			<arg value="${HELIOS_HOME}/platform/apache-tomee-1.6.0-plus.zip"/>
			<arg value="${TOMEE_HOME}"/>
		</exec>
		
		<!-- load sql driver for auth-->
		<copy file="${HELIOS_LIB}/jtds-1.2.5.jar" todir="${TOMEE_LIB}" verbose="on" overwrite="true"/>

		<!-- tomcat config -->
		<copy file="${HELIOS_HOME}/platform/server.xml" todir="${TOMEE_HOME}/conf/" verbose="on" overwrite="true"/>
		<copy file="${HELIOS_HOME}/platform/tomcat-users.xml" todir="${TOMEE_HOME}/conf/" verbose="on" overwrite="true"/>
		<copy file="${HELIOS_HOME}/scripts/setenv.sh" todir="${TOMEE_HOME}/bin/" verbose="on" overwrite="true"/>
		
		<!-- remove docs webapp -->
		<delete dir ="${HELIOS_APP_DIR}/../docs"/>
		
		<!-- start tomcat -->
		<chmod file="${TOMEE_HOME}/bin/startup.sh" perm="775" />
		<chmod file="${TOMEE_HOME}/bin/shutdown.sh" perm="775" />
		<chmod file="${TOMEE_HOME}/bin/catalina.sh" perm="775" />
		<exec executable="${TOMEE_HOME}/bin/startup.sh" />
		
	</target>
	
	<target name ="nuke" depends="uninstall"/>
	<target name="uninstall" depends="undeploy">
		<chmod file="${TOMEE_HOME}/bin/shutdown.sh" perm="775" />
		<exec executable="${TOMEE_HOME}/bin/shutdown.sh" />
		<echo>Sleeping so tomcat can shutdown...</echo>
		<sleep seconds="20" />
		<delete dir="${TOMEE_HOME}"/>
	</target>
	
	<target name="reinstall" depends="uninstall,install"/>
</project>
