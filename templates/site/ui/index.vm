#set( $siteConfigClass = $SITE_CLASS_PREFIX + ".site.SiteConfig")

<%@include file="/header.jsp"%>

<%@ page import="com.sutherland.helios.api.report.frontend.ReportFrontEnds"%>
<%@ page import="com.sutherland.helios.report.ReportTypes"%>
<%@ page import="com.sutherland.helios.data.granularity.time.TimeGrains"%>
<%@ page import="com.sutherland.helios.data.granularity.user.UserGrains"%>
<%@ page import="com.sutherland.helios.date.parsing.DateParser"%>
<%@ page import="com.sutherland.helios.date.interval.Intervals"%>
<%@ page import="com.sutherland.helios.report.parameters.ParameterInfo"%>
<%@ page import="java.util.GregorianCalendar"%>
<%@ page import="java.util.ArrayList"%>
<%@ page import="java.util.HashMap"%>
<%@ page import="java.util.LinkedHashMap"%>
<%@ page import="java.util.Map.Entry"%>
<%@ page import="java.util.Arrays"%>
<%@ page import="$siteConfigClass"%>

<script type="text/javascript" src="<%=request.getContextPath( )%>/js/jquery-1.10.2.min.js"></script>
<script type="text/javascript" src="<%=request.getContextPath( )%>/js/jquery.csv-0.71.min.js"></script>
<script type="text/javascript" src="<%=request.getContextPath( )%>/js/jquery-ui.min.js"></script>
<script type="text/javascript" src="<%=request.getContextPath( )%>/js/webRequest.js"></script>
<script type="text/javascript" src="<%=request.getContextPath( )%>/js/dateRequest.js"></script>
<script type="text/javascript" src="<%=request.getContextPath( )%>/js/jquery.datetimepicker.js"></script>

<%
Intervals dateIntervals = new Intervals(DateParser.NOW_DATE_KEYWORD);

String todayStartParam = dateIntervals.getTimeInterval(Intervals.TODAY_INTERVAL_NAME).getStartDate();
String yesterdayStartParam = dateIntervals.getTimeInterval(Intervals.YESTERDAY_INTERVAL_NAME).getStartDate();
String yesterdayEndParam = dateIntervals.getTimeInterval(Intervals.YESTERDAY_INTERVAL_NAME).getEndDate();
String thisWeekStartParam = dateIntervals.getTimeInterval(Intervals.THIS_WEEK_INTERVAL_NAME).getStartDate();
String lastWeekStartParam = dateIntervals.getTimeInterval(Intervals.LAST_WEEK_INTERVAL_NAME).getStartDate();
String lastWeekEndParam = dateIntervals.getTimeInterval(Intervals.LAST_WEEK_INTERVAL_NAME).getEndDate();
String thisMonthStartParam = dateIntervals.getTimeInterval(Intervals.THIS_MONTH_INTERVAL_NAME).getStartDate();
String lastMonthStartParam = dateIntervals.getTimeInterval(Intervals.LAST_MONTH_INTERVAL_NAME).getStartDate();
String lastMonthEndParam = dateIntervals.getTimeInterval(Intervals.LAST_MONTH_INTERVAL_NAME).getEndDate();
String thisQuarterStartParam = dateIntervals.getTimeInterval(Intervals.THIS_QUARTER_INTERVAL_NAME).getStartDate();
String lastQuarterStartParam = dateIntervals.getTimeInterval(Intervals.LAST_QUARTER_INTERVAL_NAME).getStartDate();
String lastQuarterEndParam = dateIntervals.getTimeInterval(Intervals.LAST_QUARTER_INTERVAL_NAME).getEndDate();
String thisFiscalQuarterStartParam = dateIntervals.getTimeInterval(Intervals.THIS_FQ_INTERVAL_NAME).getStartDate();
String lastFiscalQuarterStartParam = dateIntervals.getTimeInterval(Intervals.LAST_FQ_INTERVAL_NAME).getStartDate();
String lastFiscalQuarterEndParam = dateIntervals.getTimeInterval(Intervals.LAST_FQ_INTERVAL_NAME).getEndDate();
String thisFiscalYearStartParam = dateIntervals.getTimeInterval(Intervals.THIS_FY_INTERVAL_NAME).getStartDate();
String lastFiscalYearStartParam = dateIntervals.getTimeInterval(Intervals.LAST_FY_INTERVAL_NAME).getStartDate();
String lastFiscalYearEndParam = dateIntervals.getTimeInterval(Intervals.LAST_FY_INTERVAL_NAME).getEndDate();
String thisYearStartParam = dateIntervals.getTimeInterval(Intervals.THIS_YEAR_INTERVAL_NAME).getStartDate();
String lastYearStartParam = dateIntervals.getTimeInterval(Intervals.LAST_YEAR_INTERVAL_NAME).getStartDate();
String lastYearEndParam = dateIntervals.getTimeInterval(Intervals.LAST_YEAR_INTERVAL_NAME).getEndDate();
%>

<table width="100%">
<tr>
<td align ="left" width="50%"><img src="<%= request.getContextPath() %>/images/site_banner.jpg" width="400" height="72"/></td>
<td align="right" valign="center" width="30%"><b><font size="24"><%= SiteConfig.HELIOS_READABLE_SITE_NAME %></font></b></td>
</tr>
</table>

<link rel="stylesheet" href="<%= request.getContextPath() %>/css/helios_site.css" type="text/css"  />
<link rel="stylesheet" href="<%= request.getContextPath() %>/css/jquery.datetimepicker.css" type="text/css"  />
<link rel="stylesheet" href="<%= request.getContextPath() %>/css/jquery-ui.min.css" type="text/css"  />
<link rel="stylesheet" href="<%= request.getContextPath() %>/css/jquery-ui.structure.min.css" type="text/css"  />
<link rel="stylesheet" href="<%= request.getContextPath() %>/css/jquery-ui.theme.min.css" type="text/css"  />

<!-- 
<table id="loadingSpace" width="100%">
<tr><td style="background-color: #ededed" align="center" valign="top">
<div id="loadingDiv" style="display: block;">
<img src="<%= request.getContextPath() %>/images/loading.gif" width="100" height="100" />
</div>
</td></tr>
</table>
-->

<div class="roundedtable">
<table id="mainTable">
	<thead>
		<tr>
			<th id="metricsHeader">Metrics</th>
			<th id="rosterHeader">Roster</th>
			<th id="paramsHeader">Parameters</th>
		</tr>
	</thead>
	<tbody>
		<tr>
			<td id="metricsCol" align="left" valign="top" style="width: 175px;">
				<!--  report names -->
				<p><b>Select Metrics</b></p> 
				<select style="background-color: #ededed; border: 1px solid #0000FF; width: 175px;" id="metricSelectList" multiple></select>
			</td>
			<td id="rosterCol" align="left" valign="top" style="width: 400px" >
				<!-- user and team lists --> 
				
				<table id="rosterTable" style="width: 400px	; table-layout: fixed;" >
				<tr>
				<td valign="top">
					<p><b>Select Teams</b></p>
					<select style="background-color: #ededed; border: 1px solid #0000FF; width: 200px;" id="teamSelectList" multiple></select> 
				</td>
				<td valign="top">
					<p><b>Select Agents</b></p>
					<select style="background-color: #ededed; border: 1px solid #0000FF; width: 200px;" id="agentSelectList" multiple></select>
				</td>
				</tr>
				</table>
			</td>

			<td id="paramsCol" valign="top" align="left" style="width: 350px;">
				<table id="paramsTable" style="width: 350px; table-layout: fixed;">
					<tbody>
						<tr>
							<td><b>Select Parameters</b><br>
							<br></td>
						</tr>
						<tr id="selectMetricRow">
							<td>Select a Metric.</td>
						</tr>

						<tr id="reportInfoRow">
							<td>
								<p id="metricName">Metric Name</p>
								<p id="metricDesc">Metric Description</p> <br>
							</td>
						</tr>

						<tr id="reportTypesRow">
							<td><label id="reportTypesLabel" for="reportTypesSelectList">Choose a report type:</label><br><select id="reportTypesSelectList"></select></td>
						</tr>

						<tr id="dateIntervalsRow">
						<td>
							<table>
								<tr><td>
									<label id="dateIntervalLabel" for="dateIntervalsSelectList">Choose a date interval:</label><br>
									<select id="dateIntervalsSelectList"></select>
								</td></tr>
								<tr><td>
									<label id="startDateLabel" for="startDateField">Start Date</label><br>
									<input id="startDateField" type="text" size="19"><br>
									<label id="endDateLabel" for="endDateField">End Date</label><br>
									<input id="endDateField" type="text" size="19" >
								</td></tr>
							</table>
						</td>
						</tr>

						<tr id="dateFormatsRow">
							<td><label id="dateFormatsLabel" for="dateFormatsSelectList">Choose a date format:</label><br><select id="dateFormatsSelectList"></select></td>
						</tr>

						<tr id="timeGrainsRow">
							<td><label id="timeGrainLabel" for="timeGrainsSelectList">Choose a time granularity:</label><br><select id="timeGrainsSelectList"></select></td>
						</tr>

						<tr id="userGrainsRow">
							<td><label id="userGrainsLabel" for="userGrainsSelectList">Choose a user granularity:</label><br><select id="userGrainsSelectList"></select></td>
						</tr>

						<tr id="numDriversRow">
							<td><label id="numDriversLabel" for="numDriversSelectList">Choose	number of drivers:</label><br><select id="numDriversSelectList"></select></td>
						</tr>

						<tr id="reportFrontEndsRow">
							<td><label id="reportFrontEndLabel" for="reportFrontEndSelectList">Choose a format:</label><br><select id="reportFrontEndsSelectList"></select></td>
						</tr>
						
						<tr id="autoRefreshRow">
							<td><label id="autoRefreshLabel" for="autoRefreshCheckBox">Auto Refresh:</label>&nbsp;<input type="checkbox" id="autoRefreshCheckBox" value="autoRefresh"></td>
						</tr>

						<tr id="showHeadersRow">
							<td><label id="showHeadersLabel" for="showHeadersCheckBox">Show Headers:</label>&nbsp;<input type="checkbox" id="showHeadersCheckBox" value="showHeaders"></td>
						</tr>

						<tr id="reportLaunchButtonRow">
							<td>
								<button id="reportLaunchButton" type="button"
									onclick="launchReport()">Run!</button>
							</td>
						</tr>
					<tbody>
				</table>
			</td>
		</tr>
	</tbody>
</table>
</div>

<script type="text/javascript">



function loadMetricList()
{
	$('#metricSelectList').html('');
	
	var siteMetrics = httpGet("<%=request.getContextPath()%>/siteMetrics").split("\n");
	
	for(var i = 0; i<siteMetrics.length; i++)
	{
		var metric = $.csv.toArray(siteMetrics[i]);
		
		if(metric.length == 2)
		{
			$("#metricSelectList").append("<option value=\"" + metric[0] +"\">" + metric[0] + "</option>");
		}
	}

	$('#metricSelectList').attr('size', 40);
}

function loadDateIntervals()
{
	$('#dateIntervalsSelectList').html('');
	
	var dateIntervals = httpGet("<%=request.getContextPath()%>/dateIntervals").split("\n");
	
	for(var i = 0; i<dateIntervals.length; i++)
	{
		var dateInterval = $.csv.toArray(dateIntervals[i]);
		
		if(dateInterval.length == 3)
		{
			$("#dateIntervalsSelectList").append("<option onclick=\"updateDateIntervals()\" value=\"" + dateInterval[0] +"\">" + dateInterval[0] + "</option>");
		}
	}
}

function updateDateIntervals()
{
	$('#dateIntervalsSelectList').trigger("change");
}

function loadTimeGrains()
{
	$('#timeGrainsSelectList').html('');
	
	var timeGrains = httpGet("<%=request.getContextPath()%>/timeGrains").split("\n");
	
	for(var i = 0; i<timeGrains.length; i++)
	{
		var timeGrain = $.csv.toArray(timeGrains[i]);
		
		if(timeGrain.length == 2)
		{
			$("#timeGrainsSelectList").append("<option value=\"" + timeGrain[1] +"\">" + timeGrain[0] + "</option>");
		}
	}
	
	//$('#timeGrainsSelectList').val($("#timeGrainsSelectList option:first").val());
}

function loadDateFormats()
{
	$('#dateFormatsSelectList').html('');
	
	var dateFormats = httpGet("<%=request.getContextPath()%>/dateFormats").split("\n");
	
	for(var i = 0; i<dateFormats.length; i++)
	{
		var dateFormat = $.csv.toArray(dateFormats[i]);
		
		if(dateFormat.length == 2)
		{
			$("#dateFormatsSelectList").append("<option value=\"" + dateFormat[1] +"\">" + dateFormat[0] + "</option>");
		}
	}
}

function loadUserGrains()
{
	$('#userGrainsSelectList').html('');
	
	var userGrains = httpGet("<%=request.getContextPath()%>/userGrains").split("\n");
	
	for(var i = 0; i<userGrains.length; i++)
	{
		var userGrain = $.csv.toArray(userGrains[i]);
		
		if(userGrain.length == 2)
		{
			$("#userGrainsSelectList").append("<option value=\"" + userGrain[1] +"\">" + userGrain[0] + "</option>");
		}
	}
}

function loadReportTypes(thisReport)
{
	//reset the list, otherwise we'll just keep appending
	$('#reportTypesSelectList').html('');
	
	//get the selected report types for the selected metric
	
	var reportTypes = httpGet("<%=request.getContextPath()%>/reportTypes?reportName=" + thisReport).split("\n");
		
	for(var i = 0; i<reportTypes.length; i++)
	{
		var reportType = $.csv.toArray(reportTypes[i]);
			
		if(reportType.length == 2)
		{
			$("#reportTypesSelectList").append("<option value=\"" + reportType[1] +"\">" + reportType[0] + "</option>");
		}
	}
}

function loadReportParameters(thisReport,reportType)
{
	//hide whatever params are already displayed
	$("#dateIntervalsRow").hide();
	$("#numDriversRow").hide();	
	$("#userGrainsRow").hide();
	$("#dateFormatsRow").hide();	
	$("#timeGrainsRow").hide();
	$("#reportFrontEndsRow").hide();
	
	var paramString = httpGet("<%=request.getContextPath()%>/reportParameters?reportName=" + thisReport + "&reportType=" + reportType);
	var params = $.csv.toArray(paramString);
	
	for(var i = 0; i<params.length; i++)
	{
		if(params[i] == "<%=ParameterInfo.START_DATE_PARAM%>")
		{
			$("#dateIntervalsRow").show();
		}
		else if(params[i] == "<%=ParameterInfo.END_DATE_PARAM%>")
		{
			$("#dateIntervalsRow").show();
		}
		else if(params[i] == "<%=ParameterInfo.USER_GRAIN_PARAM%>")
		{
			$("#userGrainsRow").show();
		}
		else if(params[i] == "<%=ParameterInfo.TIME_GRAIN_PARAM%>")
		{
			$("#timeGrainsRow").show();
		}
		else if(params[i] == "<%=ParameterInfo.NUM_DRIVERS_PARAM%>")
		{
			$("#numDriversRow").show();
		}
		else if(params[i] == "<%=ParameterInfo.DATE_FORMAT_PARAM%>")
		{
			$("#dateFormatsRow").show();	
		}
	}
	
	loadSupportedFrontEnds(thisReport);
	
	$("#reportLaunchButtonRow").show();
}

function loadReportInfo(thisReport)
{
	//reset the list, otherwise we'll just keep appending
	$('#reportTypesSelectList').html('');
	
	//get the selected report types for the selected metric
	
	var reportInfoFields = httpGet("<%=request.getContextPath()%>/reportInfo?reportName=" + thisReport).split("\n");

	$("#metricName").html("<b>" + reportInfoFields[0] + "</b>");
	$("#metricDesc").html("<b>" + reportInfoFields[1] + "</b>");
}

function loadAgentNames()
{
	 $("#agentSelectList").html('');
	//web request to local roster report
	var agentNames = httpGet("<%=request.getContextPath()%>/agentNames").split("\n");
	
	for(var i = 0; i < agentNames.length; i++) 
	{
		if(agentNames[i] != "")
		{
	    	$("#agentSelectList").append("<option>" + agentNames[i] + "</option>");
		}
	}
	
	$('#agentSelectList').attr('size', 40);
}

function loadSupportedFrontEnds(thisReport)
{
	//load supported report front ends
	$("#reportFrontEndsSelectList").html('');
	var reportFrontEnds = httpGet("<%=request.getContextPath()%>/supportedFrontEnds?reportName=" + thisReport).split("\n");
	
	for(var i = 0; i<reportFrontEnds.length; i++)
	{
		var reportFrontEnd = $.csv.toArray(reportFrontEnds[i]);
		
		if(reportFrontEnd.length == 2)
		{
			$("#reportFrontEndsSelectList").append("<option value=\"" + reportFrontEnd[1] +"\">" + reportFrontEnd[0] + "</option>");
		}
	}
	
	$("#reportFrontEndsRow").show();
}

function loadTeamNames()
{
	 $("#teamSelectList").html('');
	//web request to local roster report
	var teamNames = httpGet("<%=request.getContextPath()%>/teamNames").split("\n");
	
	for(var i = 0; i < teamNames.length; i++) 
	{
		if(teamNames[i] != "")
		{
	    	$("#teamSelectList").append("<option>" + teamNames[i] + "</option>");
		}
	}
	
	$('#teamSelectList').attr('size', 40);
}

function loadNumDrivers()
{
	for(var i = 5; i <= 30; i+=5) 
	{
	    $("#numDriversSelectList").append("<option>" + i + "</option>");
	}
	
	//select default item
}



jQuery('#startDateField').datetimepicker({
	format:'Y-m-d H:i:00',
	mask:true
});
jQuery('#endDateField').datetimepicker({
	format:'Y-m-d H:i:00',
	mask:true
});

//$("#metricSelectList").selectable();
//$("#reportTypesSelectList").selectmenu();
//$("#dateIntervalsSelectList").selectmenu();
//$("#reportFrontEndsSelectList").selectmenu();
//$("#userGrainsSelectList").selectmenu();
//$("#numDriversSelectList").selectmenu();
//$("#timeGrainsSelectList").selectmenu();
//$("#dateFormatsSelectList").selectmenu();
//
//$("#reportLaunchButton").button();

$("#metricSelectList").change(function() 
{
	//get the selected values
	//alert( $("#metricSelectList").val() ); 
	
	var selectedReports = $("#metricSelectList").val() || [];
	
	if(selectedReports.length > 0)
	{
		$("#selectMetricRow").hide();
		
		var thisReport = selectedReports[0];
		
		//get this report's name and description. line 1 is name, line 2 is desc
		loadReportInfo(thisReport);
		
		//get this report's support types and load them
		loadReportTypes(thisReport);
		
		$("#reportTypesRow").show();
		
		$("#dateIntervalsRow").show();
		
		$("#autoRefreshCheckBox").attr('checked', false);
		$("#autoRefreshRow").hide();
		
		$("#showHeadersCheckBox").attr('checked', true);
		$("#showHeadersRow").hide();
		
		var selectedReportType = $("#reportTypesSelectList option:selected").text() || [];
		
		loadReportParameters(thisReport,selectedReportType);

		
		var reportFrontEnd = $("#reportFrontEndsSelectList").val();
		
		if(reportFrontEnd == <%=ReportFrontEnds.HTML%>)
		{
			$("#autoRefreshRow").show();
		}
		else
		{
			$("#autoRefreshCheckBox").attr('checked', false);
			$("#autoRefreshRow").hide();
		}
		
		if(reportFrontEnd == <%=ReportFrontEnds.CSV%> || reportFrontEnd == <%=ReportFrontEnds.EXCEL%>)
		{
			$("#showHeadersRow").show();
		}
		else
		{
			$("#showHeadersCheckBox").attr('checked', false);
			$("#showHeadersRow").hide();
		}
	}
	else
	{
		$("#selectMetricRow").show();
		$("#metricName").html('');
		$("#metricDesc").html('');
		
		$("#autoRefreshCheckBox").attr('checked', false);
		$("#autoRefreshRow").hide();
		
		$("#showHeadersCheckBox").attr('checked', true);
		$("#showHeadersRow").hide();
		
		$("#reportTypesRow").hide();
		$("#dateIntervalsRow").hide();
		
		$("#timeGrainsRow").hide();
		$("#userGrainsRow").hide();
		$("#autoRefreshRow").hide();

		$("#numDriversRow").hide();	
		$("#reportFrontEndsRow").hide();
		$("#reportLaunchButtonRow").hide();
	}
});

$("#reportTypesSelectList").change(function() 
{
	var selectedReports = $("#metricSelectList").val() || [];
	
	if(selectedReports.length > 0)
	{
		var selectedReportType = $("#reportTypesSelectList option:selected").text() || [];
		loadReportParameters(selectedReports, selectedReportType);
	}
});

$("#dateIntervalsSelectList").change(function() 
{
	var interval = $("#dateIntervalsSelectList").val() || [];
			
	if(interval.length > 0)
	{
		//look up the interval values and populate the start and end date boxes
		var selectedInterval = $("#dateIntervalsSelectList option:selected").text() || [];

		if(selectedInterval == "<%=Intervals.TODAY_INTERVAL_NAME%>")
		{
			$("#startDateField").val("<%=todayStartParam%>");
			$("#endDateField").val("<%= DateParser.NOW_DATE_KEYWORD.toLowerCase() %>");
		}
		else if(selectedInterval == "<%=Intervals.YESTERDAY_INTERVAL_NAME%>")
		{
			$("#startDateField").val("<%=yesterdayStartParam%>");
			$("#endDateField").val("<%=yesterdayEndParam%>");
		}
		else if(selectedInterval == "<%=Intervals.THIS_WEEK_INTERVAL_NAME%>")
		{
			$("#startDateField").val("<%=thisWeekStartParam%>");
			$("#endDateField").val("<%= DateParser.NOW_DATE_KEYWORD.toLowerCase() %>");
		}
		else if(selectedInterval == "<%=Intervals.LAST_WEEK_INTERVAL_NAME%>")
		{
			$("#startDateField").val("<%=lastWeekStartParam%>");
			$("#endDateField").val("<%=lastWeekEndParam%>");
		}
		else if(selectedInterval == "<%=Intervals.THIS_MONTH_INTERVAL_NAME%>")
		{
			$("#startDateField").val("<%=thisMonthStartParam%>");
			$("#endDateField").val("<%= DateParser.NOW_DATE_KEYWORD.toLowerCase() %>");
		}
		else if(selectedInterval == "<%=Intervals.LAST_MONTH_INTERVAL_NAME%>")
		{
			$("#startDateField").val("<%=lastMonthStartParam%>");
			$("#endDateField").val("<%=lastMonthEndParam%>");
		}
		else if(selectedInterval == "<%=Intervals.THIS_QUARTER_INTERVAL_NAME%>")
		{
			$("#startDateField").val("<%=thisQuarterStartParam%>");
			$("#endDateField").val("<%= DateParser.NOW_DATE_KEYWORD.toLowerCase() %>");
		}
		else if(selectedInterval == "<%=Intervals.LAST_QUARTER_INTERVAL_NAME%>")
		{
			$("#startDateField").val("<%=lastQuarterStartParam%>");
			$("#endDateField").val("<%=lastQuarterEndParam%>");
		}
		else if(selectedInterval == "<%=Intervals.THIS_FQ_INTERVAL_NAME%>")
		{
			$("#startDateField").val("<%=thisFiscalQuarterStartParam%>");
			$("#endDateField").val("<%= DateParser.NOW_DATE_KEYWORD.toLowerCase() %>");
		}
		else if(selectedInterval == "<%=Intervals.LAST_FQ_INTERVAL_NAME%>")
		{
			$("#startDateField").val("<%=lastFiscalQuarterStartParam%>");
			$("#endDateField").val("<%=lastFiscalQuarterEndParam%>");
		}
		else if(selectedInterval == "<%=Intervals.THIS_FY_INTERVAL_NAME%>")
		{
			$("#startDateField").val("<%=thisFiscalYearStartParam%>");
			$("#endDateField").val("<%= DateParser.NOW_DATE_KEYWORD.toLowerCase() %>");
		}
		else if(selectedInterval == "<%=Intervals.LAST_FY_INTERVAL_NAME%>")
		{
			$("#startDateField").val("<%=lastFiscalYearStartParam%>");
			$("#endDateField").val("<%=lastFiscalYearEndParam%>");
		}
		else if(selectedInterval == "<%=Intervals.THIS_YEAR_INTERVAL_NAME%>")
		{
			$("#startDateField").val("<%=thisYearStartParam%>");
			$("#endDateField").val("<%= DateParser.NOW_DATE_KEYWORD.toLowerCase() %>");
		}
		else if(selectedInterval == "<%=Intervals.LAST_YEAR_INTERVAL_NAME%>")
		{
			$("#startDateField").val("<%=lastYearStartParam%>");
			$("#endDateField").val("<%=lastYearEndParam%>");
		}
	}
});

$("#reportFrontEndsSelectList").change(function() 
{
	//expose the autorefresh checkbox for html reports	
	//else, uncheck and hide
	
	var reportFrontEnd = $("#reportFrontEndsSelectList").val();
	
	if(reportFrontEnd == <%=ReportFrontEnds.HTML%>)
	{
		$("#autoRefreshRow").show();
	}
	else
	{
		$("#autoRefreshCheckBox").attr('checked', false);
		$("#autoRefreshRow").hide();
	}
	
	if(reportFrontEnd == <%=ReportFrontEnds.CSV%> || reportFrontEnd == <%=ReportFrontEnds.EXCEL%>)
	{
		$("#showHeadersRow").show();
	}
	else
	{
		$("#showHeadersCheckBox").attr('checked', false);
		$("#showHeadersRow").hide();
	}
});

$( document ).ready(function() 
		{
	$("#loadingSpace").show();
	$("#mainTable").hide();

	//hide until the lists are populated
	$("#metricSelectList").hide();
	$("#agentSelectList").hide();
	$("#teamSelectList").hide();

	$("#autoRefreshCheckBox").attr('checked', false);
	$("#autoRefreshRow").hide();

	$("#showHeadersCheckBox").attr('checked', true);
	$("#showHeadersRow").hide();

	$("#reportTypesRow").hide();

	$("#dateIntervalsRow").hide();
	$("#numDriversRow").hide();	
	$("#userGrainsRow").hide();	
	$("#timeGrainsRow").hide();
	$("#dateFormatsRow").hide();
	$("#reportFrontEndsRow").hide();
	$("#reportLaunchButtonRow").hide();

	$("#metricName").html('');
	$("#metricDesc").html('');

	//loading image for metric list
	//loading image for team list
	//loading image for agent list

	loadMetricList();
	loadNumDrivers();

	loadTeamNames();
	loadAgentNames();

	loadDateIntervals();
	loadTimeGrains();
	loadUserGrains();
	loadDateFormats();

	$("#metricSelectList").show();
	$("#teamSelectList").show();
	$("#agentSelectList").show();
	$("#loadingSpace").hide();
	$("#mainTable").show();

	$('#dateIntervalsSelectList').trigger("change");
});

function launchReport()
{
	var agentNames = $("#agentSelectList").val();
	
	var teamNames = $("#teamSelectList").val();
	
	//some reports will not have a roster, check to see if agentNames/teamNames are available
	if( (agentNames == null || agentNames.length == 0) && (teamNames == null || teamNames.length == 0))
	{
		teamNames =new Array();
		$("#teamSelectList option").each(function()
		{
			// add $(this).val() to your list
			teamNames.push($(this).val());
		});
	}
	
	//compile parameter url, switch on report type 
	var dateInterval =  $("#dateIntervalsSelectList").val();
	var timeGrain =  $("#timeGrainsSelectList").val();
	var userGrain =  $("#userGrainsSelectList").val();
	var dateFormat = $("#dateFormatsSelectList").val()
	var reportURL ="<%=request.getContextPath()%>/";
	var reportType = $("#reportTypesSelectList").val();
	var selectedReports = $("#metricSelectList").val() || [];
	var reportFrontEnd = $("#reportFrontEndsSelectList").val();
	var numDrivers = $("#numDriversSelectList").val();
	var startDate = $("#startDateField").val();
	var endDate = $("#endDateField").val();

	if(selectedReports == null || selectedReports.length == 0)
	{
		alert("Please choose at least one metric.");
	}
	else 	if(reportType == null || reportType == "")
	{
		alert("Please choose a report type");
	}
	else 	if(reportFrontEnd == null || reportFrontEnd == "")
	{
		alert("Please choose a report format");
	}
	else 	if(dateInterval == null || dateInterval == "")
	{
		alert("Please choose a date interval");
	}
	else
	{
		var runReport = 1;

		//api source 
		reportURL += "reporting?reportName=" + selectedReports[0] + "&source=UI";

		reportURL += "&format=" + reportFrontEnd;
		reportURL += "&reportType=" + reportType;
		reportURL += "&numDrivers=" + numDrivers;
		reportURL += "&dateFormat=" + dateFormat;
		reportURL += "&startDate=" + startDate;
		reportURL += "&endDate=" + endDate;


		if(reportFrontEnd == <%=ReportFrontEnds.CSV%>)
		{
			reportURL += "&enquote=1";
		}
		else if(reportFrontEnd == <%=ReportFrontEnds.HTML%>)
		{
			if($('#autoRefreshCheckBox').prop('checked') == true)
			{
				reportURL += "&autoRefresh=1";
			}
		}

		if($('#showHeadersCheckBox').prop('checked') == true)
		{
			reportURL += "&enableHeaders=1";
		}
		else
		{
			reportURL += "&enableHeaders=0";
		}

		if(reportType == <%=ReportTypes.TIME_TREND_REPORT%>)
		{
			if(timeGrain == null || timeGrain == "")
			{
				runReport =0;
				alert("Please choose a time granularity");
			}
			else
			{
				reportURL += "&timeGrain=" + timeGrain; 
			}
		}
		else if(reportType == <%=ReportTypes.STACK_REPORT%>)
		{
			if(userGrain == null || userGrain == "")
			{
				runReport = 0;
				alert("Please choose a user granularity");
			}
			else 
			{
				reportURL += "&userGrain=" + userGrain; 
			}
		}

		if(agentNames != null)
		{
			for(var i =0; i<agentNames.length; i++)
			{
				if(agentNames[i] != null)
				{
					reportURL += "&agentName=" + agentNames[i];
				}
			}
		}

		if(teamNames != null)
		{
			for(var i =0; i<teamNames.length; i++)
			{
				if(teamNames[i] != null)
				{
					reportURL += "&teamName="+teamNames[i];
				}
			}
		}

		//launch report

		if(runReport == 1)
		{
			window.open(reportURL);
		}
	}
}

</script>


<%@include file="/footer.jsp"%>
